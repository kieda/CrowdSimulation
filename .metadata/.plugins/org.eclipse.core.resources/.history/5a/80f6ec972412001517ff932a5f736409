package edu.cmu.cs464.p3.modulelang.ast

import java.util.stream.Collectors

/**
 * @author zkieda
 */
object ToString {
  private def toString (x: Node, i : Int) : String = {
    var spacing = "";
    for(a <- 0 until i; s <- "") spacing += "  ";
    
    x match {
      case Program(imports, baseModule) => 
        (if(!imports.isEmpty()) 
          spacing + "import\n" + 
          {
            var S : String = ""
            for(i <- 0 until imports.size())
          ""
          } + 
          spacing + "end\n" else "") + toString(baseModule, i+1)
      case JavaRef(path) => path.stream().collect(Collectors.joining("."))
      case ModuleImport(path) => spacing + {
        var L : List[String] = List()
        for(i <- 0 until path.size()){
          L = toString(path.get(i), i+1)::L
        }
        L.reverse.mkString(".");
      }
      case ParsedModule(baseClass, children) => ""
      case Star() => "*"
      case Ident(id) => id
    }
  }
  
  def toString (x : Node) : String = toString(x, 0)
}